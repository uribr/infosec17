"It does make the validation pretty slow, but so what." <--- this is the vulnerability! 
Because validation takes quite a while now in terms of writing data to a file (a few seconds is more than enough to write a file a couple of times with time to spare) we can pass a valid script such as the one in example.json and sleep for a half a second (a whole second and 0.1 seconds also seem to work) which almost guarantees that by the end of that half a second the run.py programs' validate_script(path) already read the file. In the rest of the time it takes for the validation to complete we overwrite the file with a new 'malicious' and invalidly signed script; "{u'command': u'echo hacked', u'signature': u'BOOP'}".

Because the execute_script(path) method in run.py reads the file again it will read the invalid script and execute it. 

Note 1: Without the sleep call in q5.py it seems the the rewrite happens before the run.py has time to reach the reading of the file validate_script(path) and thus it is essential.

Note 2: A way to solve this vulnerability (I think) is to read the script ONCE in the programs' main method and pass the script to the validation and execution, removing the double-reading and the vulnerable period of time.
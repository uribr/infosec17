Starting with Winston, I converted the string to be sent to an array of bytes, from it I generated an array of 8-bit representation of the bytes with padding of 0s if needed. Next I converted it to a string, and padded it to be a multiple of 3 to fill the reserved field of the TCP header. Then I treated the whole thing as a base-2 number and with a mask of three bits (000...000111) I seperated chunks of 3-bits to be sent and performed a 3-bit shift to the right to get the next 3 bits. For each such chunk I created a tcp header with the details described in the exercsie, added a premade IP header and sent it to Julia.

Julia sniffs for incoming packets that are coming from 127.0.0.1 with source port 65000 and destination port 1984 whose SYN and ACK flags are lit. FUrthermore, the sequence number must match the next sequence number Julia expectes to receive (initailly it is 0, then 1, 2 and so on).
Julias' handling method extract the reserved bits from the TCP header using a 3 bit mask (00...0111) then pads it wil zeros if needed and keepts it in an array at index = seq number.
Julia ceases all sniffing once she got ack number of packets (the same ack number that all the packets from Winston should carry and that represent the number of packets he intends to send).
Lastly, Julia takes the array of whose made of chunks of 3 bits manipulates its representation a bit (pun not intended) and takes chunks of 8 bits as characters and reconstructs the string from them.